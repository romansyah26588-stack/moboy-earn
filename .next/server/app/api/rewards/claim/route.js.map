{"version":3,"file":"app/api/rewards/claim/route.js","mappings":"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","sources":["webpack://_N_E/external commonjs \"node:async_hooks\"","webpack://_N_E/external commonjs \"node:buffer\"","webpack://_N_E/./src/app/api/rewards/claim/route.ts","webpack://_N_E/./src/app/api/rewards/claim/route.ts?2994","webpack://_N_E/?f07a","webpack://_N_E/./src/lib/db.ts"],"sourcesContent":["module.exports = require(\"node:async_hooks\");","module.exports = require(\"node:buffer\");","import { NextRequest, NextResponse } from 'next/server'\nexport const runtime = 'edge';\nimport { db } from '@/lib/db'\n\nexport async function POST(request: NextRequest) {\n  try {\n    const { walletAddress } = await request.json()\n\n    if (!walletAddress) {\n      return NextResponse.json(\n        { error: 'Wallet address is required' },\n        { status: 400 }\n      )\n    }\n\n    // Find user\n    const user = await db.user.findUnique({\n      where: { walletAddress }\n    })\n\n    if (!user) {\n      return NextResponse.json(\n        { error: 'User not found' },\n        { status: 404 }\n      )\n    }\n\n    if (user.claimableRewards <= 0) {\n      return NextResponse.json(\n        { error: 'No rewards available to claim' },\n        { status: 400 }\n      )\n    }\n\n    // In a real implementation, you would process the Solana transaction here\n    // For now, we'll simulate it with AI\n    try {\n      const zai = await ZAI.create()\n      \n      // Mock transaction processing\n      const mockTxHash = `tx_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n      \n      // Create reward claim record\n      const claim = await db.rewardClaim.create({\n        data: {\n          amount: user.claimableRewards,\n          txHash: mockTxHash,\n          userId: user.id\n        }\n      })\n\n      // Update user's claimable rewards\n      await db.user.update({\n        where: { id: user.id },\n        data: {\n          claimableRewards: 0\n        }\n      })\n\n      return NextResponse.json({\n        success: true,\n        claim: {\n          id: claim.id,\n          amount: claim.amount,\n          claimedAt: claim.claimedAt,\n          txHash: claim.txHash\n        },\n        message: 'Rewards claimed successfully!'\n      })\n\n    } catch (aiError) {\n      console.error('Transaction processing failed:', aiError)\n      return NextResponse.json(\n        { error: 'Failed to process transaction' },\n        { status: 500 }\n      )\n    }\n\n  } catch (error) {\n    console.error('Reward claim error:', error)\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    )\n  }\n}","import { AppRouteRouteModule } from \"next/dist/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"/workspaces/moboy-earn/src/app/api/rewards/claim/route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/rewards/claim/route\",\n        pathname: \"/api/rewards/claim\",\n        filename: \"route\",\n        bundlePath: \"app/api/rewards/claim/route\"\n    },\n    resolvedPagePath: \"/workspaces/moboy-earn/src/app/api/rewards/claim/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","var _self___RSC_MANIFEST;\nimport { createServerModuleMap } from \"next/dist/server/app-render/action-utils\";\nimport { setReferenceManifestsSingleton } from \"next/dist/server/app-render/encryption-utils\";\nimport { EdgeRouteModuleWrapper } from \"next/dist/server/web/edge-route-module-wrapper\";\n// Import the userland code.\nimport * as module from \"next-app-loader?name=app%2Fapi%2Frewards%2Fclaim%2Froute&page=%2Fapi%2Frewards%2Fclaim%2Froute&pagePath=private-next-app-dir%2Fapi%2Frewards%2Fclaim%2Froute.ts&appDir=%2Fworkspaces%2Fmoboy-earn%2Fsrc%2Fapp&appPaths=%2Fapi%2Frewards%2Fclaim%2Froute&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=&flyingShuttle=false&preferredRegion=&middlewareConfig=e30%3D!private-next-app-dir/api/rewards/claim/route.ts?__next_edge_ssr_entry__\";\nconst nextConfig = {\"env\":{},\"eslint\":{\"ignoreDuringBuilds\":true},\"typescript\":{\"ignoreBuildErrors\":true,\"tsconfigPath\":\"tsconfig.json\"},\"distDir\":\".next\",\"cleanDistDir\":true,\"assetPrefix\":\"\",\"cacheMaxMemorySize\":52428800,\"configOrigin\":\"next.config.ts\",\"useFileSystemPublicRoutes\":true,\"generateEtags\":true,\"pageExtensions\":[\"tsx\",\"ts\",\"jsx\",\"js\"],\"poweredByHeader\":true,\"compress\":true,\"images\":{\"deviceSizes\":[640,750,828,1080,1200,1920,2048,3840],\"imageSizes\":[16,32,48,64,96,128,256,384],\"path\":\"/_next/image\",\"loader\":\"default\",\"loaderFile\":\"\",\"domains\":[\"z-cdn-media.chatglm.cn\",\"chatglm.cn\"],\"disableStaticImages\":false,\"minimumCacheTTL\":60,\"formats\":[\"image/webp\"],\"dangerouslyAllowSVG\":false,\"contentSecurityPolicy\":\"script-src 'none'; frame-src 'none'; sandbox;\",\"contentDispositionType\":\"attachment\",\"remotePatterns\":[],\"unoptimized\":true},\"devIndicators\":{\"appIsrStatus\":true,\"buildActivity\":true,\"buildActivityPosition\":\"bottom-right\"},\"onDemandEntries\":{\"maxInactiveAge\":60000,\"pagesBufferLength\":5},\"amp\":{\"canonicalBase\":\"\"},\"basePath\":\"\",\"sassOptions\":{},\"trailingSlash\":false,\"i18n\":null,\"productionBrowserSourceMaps\":false,\"excludeDefaultMomentLocales\":true,\"serverRuntimeConfig\":{},\"publicRuntimeConfig\":{},\"reactProductionProfiling\":false,\"reactStrictMode\":false,\"reactMaxHeadersLength\":6000,\"httpAgentOptions\":{\"keepAlive\":true},\"logging\":{},\"expireTime\":31536000,\"staticPageGenerationTimeout\":60,\"modularizeImports\":{\"@mui/icons-material\":{\"transform\":\"@mui/icons-material/{{member}}\"},\"lodash\":{\"transform\":\"lodash/{{member}}\"}},\"outputFileTracingRoot\":\"/workspaces/moboy-earn\",\"experimental\":{\"cacheLife\":{\"default\":{\"stale\":300,\"revalidate\":900,\"expire\":4294967294},\"seconds\":{\"stale\":0,\"revalidate\":1,\"expire\":60},\"minutes\":{\"stale\":300,\"revalidate\":60,\"expire\":3600},\"hours\":{\"stale\":300,\"revalidate\":3600,\"expire\":86400},\"days\":{\"stale\":300,\"revalidate\":86400,\"expire\":604800},\"weeks\":{\"stale\":300,\"revalidate\":604800,\"expire\":2592000},\"max\":{\"stale\":300,\"revalidate\":2592000,\"expire\":4294967294}},\"cacheHandlers\":{},\"multiZoneDraftMode\":false,\"appNavFailHandling\":false,\"prerenderEarlyExit\":true,\"serverMinification\":true,\"serverSourceMaps\":false,\"linkNoTouchStart\":false,\"caseSensitiveRoutes\":false,\"preloadEntriesOnStart\":true,\"clientRouterFilter\":true,\"clientRouterFilterRedirects\":false,\"fetchCacheKeyPrefix\":\"\",\"middlewarePrefetch\":\"flexible\",\"optimisticClientCache\":true,\"manualClientBasePath\":false,\"cpus\":1,\"memoryBasedWorkersCount\":false,\"imgOptConcurrency\":null,\"imgOptTimeoutInSeconds\":7,\"imgOptMaxInputPixels\":268402689,\"imgOptSequentialRead\":null,\"isrFlushToDisk\":true,\"workerThreads\":false,\"optimizeCss\":false,\"nextScriptWorkers\":false,\"scrollRestoration\":false,\"externalDir\":false,\"disableOptimizedLoading\":false,\"gzipSize\":true,\"craCompat\":false,\"esmExternals\":true,\"fullySpecified\":false,\"swcTraceProfiling\":false,\"forceSwcTransforms\":false,\"largePageDataBytes\":128000,\"turbo\":{\"root\":\"/workspaces/moboy-earn\"},\"typedRoutes\":false,\"typedEnv\":false,\"parallelServerCompiles\":false,\"parallelServerBuildTraces\":false,\"ppr\":false,\"reactOwnerStack\":false,\"webpackMemoryOptimizations\":false,\"optimizeServerReact\":true,\"useEarlyImport\":false,\"staleTimes\":{\"dynamic\":0,\"static\":300},\"after\":false,\"serverComponentsHmrCache\":true,\"staticGenerationMaxConcurrency\":8,\"staticGenerationMinPagesPerWorker\":25,\"dynamicIO\":false,\"optimizePackageImports\":[\"lucide-react\",\"date-fns\",\"lodash-es\",\"ramda\",\"antd\",\"react-bootstrap\",\"ahooks\",\"@ant-design/icons\",\"@headlessui/react\",\"@headlessui-float/react\",\"@heroicons/react/20/solid\",\"@heroicons/react/24/solid\",\"@heroicons/react/24/outline\",\"@visx/visx\",\"@tremor/react\",\"rxjs\",\"@mui/material\",\"@mui/icons-material\",\"recharts\",\"react-use\",\"effect\",\"@effect/schema\",\"@effect/platform\",\"@effect/platform-node\",\"@effect/platform-browser\",\"@effect/platform-bun\",\"@effect/sql\",\"@effect/sql-mssql\",\"@effect/sql-mysql2\",\"@effect/sql-pg\",\"@effect/sql-squlite-node\",\"@effect/sql-squlite-bun\",\"@effect/sql-squlite-wasm\",\"@effect/sql-squlite-react-native\",\"@effect/rpc\",\"@effect/rpc-http\",\"@effect/typeclass\",\"@effect/experimental\",\"@effect/opentelemetry\",\"@material-ui/core\",\"@material-ui/icons\",\"@tabler/icons-react\",\"mui-core\",\"react-icons/ai\",\"react-icons/bi\",\"react-icons/bs\",\"react-icons/cg\",\"react-icons/ci\",\"react-icons/di\",\"react-icons/fa\",\"react-icons/fa6\",\"react-icons/fc\",\"react-icons/fi\",\"react-icons/gi\",\"react-icons/go\",\"react-icons/gr\",\"react-icons/hi\",\"react-icons/hi2\",\"react-icons/im\",\"react-icons/io\",\"react-icons/io5\",\"react-icons/lia\",\"react-icons/lib\",\"react-icons/lu\",\"react-icons/md\",\"react-icons/pi\",\"react-icons/ri\",\"react-icons/rx\",\"react-icons/si\",\"react-icons/sl\",\"react-icons/tb\",\"react-icons/tfi\",\"react-icons/ti\",\"react-icons/vsc\",\"react-icons/wi\"]},\"bundlePagesRouterDependencies\":false,\"configFile\":\"/workspaces/moboy-earn/next.config.ts\",\"configFileName\":\"next.config.ts\"}\nconst maybeJSONParse = (str)=>str ? JSON.parse(str) : undefined;\nconst rscManifest = (_self___RSC_MANIFEST = self.__RSC_MANIFEST) == null ? void 0 : _self___RSC_MANIFEST[\"/api/rewards/claim/route\"];\nconst rscServerManifest = maybeJSONParse(self.__RSC_SERVER_MANIFEST);\nif (rscManifest && rscServerManifest) {\n    setReferenceManifestsSingleton({\n        page: \"/api/rewards/claim/route\",\n        clientReferenceManifest: rscManifest,\n        serverActionsManifest: rscServerManifest,\n        serverModuleMap: createServerModuleMap({\n            serverActionsManifest: rscServerManifest\n        })\n    });\n}\nexport const ComponentMod = module;\nexport default EdgeRouteModuleWrapper.wrap(module.routeModule, {\n    nextConfig\n});\n\n//# sourceMappingURL=edge-app-route.js.map","import { PrismaClient } from '@prisma/client'\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: PrismaClient | undefined\n}\n\nexport const db =\n  globalForPrisma.prisma ??\n  new PrismaClient({\n    log: ['query'],\n  })\n\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = db"],"names":["runtime","POST","request","walletAddress","json","NextResponse","error","status","user","db","findUnique","where","claimableRewards","ZAI","create","mockTxHash","Date","now","Math","random","toString","substr","claim","rewardClaim","data","amount","txHash","userId","id","update","success","claimedAt","message","aiError","console","globalThis","prisma","PrismaClient","log"],"sourceRoot":"","ignoreList":[]}