{"version":3,"file":"app/api/content/submit/route.js","mappings":"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","sources":["webpack://_N_E/external commonjs \"node:async_hooks\"","webpack://_N_E/external commonjs \"node:buffer\"","webpack://_N_E/./src/app/api/content/submit/route.ts","webpack://_N_E/./src/app/api/content/submit/route.ts?b3ca","webpack://_N_E/?43de","webpack://_N_E/./src/lib/db.ts"],"sourcesContent":["module.exports = require(\"node:async_hooks\");","module.exports = require(\"node:buffer\");","import { NextRequest, NextResponse } from 'next/server'\nexport const runtime = 'edge';\nimport { db } from '@/lib/db'\n\n// Social media URL validation patterns\nconst SOCIAL_MEDIA_PATTERNS = {\n  twitter: /^https?:\\/\\/(www\\.)?(twitter\\.com|x\\.com)\\/.+/,\n  instagram: /^https?:\\/\\/(www\\.)?(instagram\\.com|instagr\\.am)\\/.+/,\n  youtube: /^https?:\\/\\/(www\\.)?(youtube\\.com|youtu\\.be)\\/.+/,\n  tiktok: /^https?:\\/\\/(www\\.)?(tiktok\\.com)\\/.+/,\n  facebook: /^https?:\\/\\/(www\\.)?(facebook\\.com|fb\\.me)\\/.+/\n}\n\nfunction getPlatformFromUrl(url: string): string {\n  if (url.includes('twitter.com') || url.includes('x.com')) return 'Twitter'\n  if (url.includes('instagram.com')) return 'Instagram'\n  if (url.includes('youtube.com') || url.includes('youtu.be')) return 'YouTube'\n  if (url.includes('tiktok.com')) return 'TikTok'\n  if (url.includes('facebook.com')) return 'Facebook'\n  return 'Unknown'\n}\n\nfunction validateSocialMediaUrl(url: string): { valid: boolean; platform?: string } {\n  for (const [platform, pattern] of Object.entries(SOCIAL_MEDIA_PATTERNS)) {\n    if (pattern.test(url)) {\n      return { valid: true, platform: getPlatformFromUrl(url) }\n    }\n  }\n  return { valid: false }\n}\n\nasync function analyzeContentWithAI(url: string): Promise<{ estimatedViews: number; quality: number }> {\n  try {\n    const zai = await ZAI.create()\n    \n    // Use web search to analyze the content\n    const searchResult = await zai.functions.invoke(\"web_search\", {\n      query: url,\n      num: 5\n    })\n\n    // Mock analysis based on search results\n    // In a real implementation, you would analyze the actual content\n    const estimatedViews = Math.floor(Math.random() * 10000) + 100\n    const quality = Math.random() * 0.5 + 0.5 // 0.5 to 1.0\n\n    return { estimatedViews, quality }\n  } catch (error) {\n    console.error('AI analysis failed:', error)\n    // Fallback values\n    return { estimatedViews: 500, quality: 0.7 }\n  }\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    const { url, walletAddress } = await request.json()\n\n    if (!url || !walletAddress) {\n      return NextResponse.json(\n        { error: 'URL and wallet address are required' },\n        { status: 400 }\n      )\n    }\n\n    // Validate URL format\n    const validation = validateSocialMediaUrl(url)\n    if (!validation.valid) {\n      return NextResponse.json(\n        { error: 'Invalid URL format. Please use a valid social media link.' },\n        { status: 400 }\n      )\n    }\n\n    // Check for duplicate submission\n    const existingSubmission = await db.contentSubmission.findUnique({\n      where: { url }\n    })\n\n    if (existingSubmission) {\n      return NextResponse.json(\n        { error: 'Konten sudah ada' },\n        { status: 409 }\n      )\n    }\n\n    // Find or create user\n    let user = await db.user.findUnique({\n      where: { walletAddress }\n    })\n\n    if (!user) {\n      user = await db.user.create({\n        data: { walletAddress }\n      })\n    }\n\n    // Analyze content with AI\n    const { estimatedViews, quality } = await analyzeContentWithAI(url)\n\n    // Calculate initial reward based on quality and estimated views\n    const baseReward = 0.00001 // 0.00001 SOL per view\n    const initialReward = estimatedViews * baseReward * quality\n\n    // Create content submission\n    const submission = await db.contentSubmission.create({\n      data: {\n        url,\n        platform: validation.platform!,\n        views: 0,\n        reward: 0,\n        status: 'pending',\n        userId: user.id\n      }\n    })\n\n    // Create initial view metric\n    await db.viewMetric.create({\n      data: {\n        views: 0,\n        contentId: submission.id\n      }\n    })\n\n    // Update user stats\n    await db.user.update({\n      where: { id: user.id },\n      data: {\n        totalPosts: user.totalPosts + 1\n      }\n    })\n\n    return NextResponse.json({\n      success: true,\n      submission: {\n        id: submission.id,\n        url: submission.url,\n        platform: submission.platform,\n        views: submission.views,\n        reward: submission.reward,\n        status: submission.status,\n        submittedAt: submission.submittedAt,\n        estimatedViews,\n        estimatedReward: initialReward\n      }\n    })\n\n  } catch (error) {\n    console.error('Content submission error:', error)\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    )\n  }\n}","import { AppRouteRouteModule } from \"next/dist/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"/workspaces/moboy-earn/src/app/api/content/submit/route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/content/submit/route\",\n        pathname: \"/api/content/submit\",\n        filename: \"route\",\n        bundlePath: \"app/api/content/submit/route\"\n    },\n    resolvedPagePath: \"/workspaces/moboy-earn/src/app/api/content/submit/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","var _self___RSC_MANIFEST;\nimport { createServerModuleMap } from \"next/dist/server/app-render/action-utils\";\nimport { setReferenceManifestsSingleton } from \"next/dist/server/app-render/encryption-utils\";\nimport { EdgeRouteModuleWrapper } from \"next/dist/server/web/edge-route-module-wrapper\";\n// Import the userland code.\nimport * as module from \"next-app-loader?name=app%2Fapi%2Fcontent%2Fsubmit%2Froute&page=%2Fapi%2Fcontent%2Fsubmit%2Froute&pagePath=private-next-app-dir%2Fapi%2Fcontent%2Fsubmit%2Froute.ts&appDir=%2Fworkspaces%2Fmoboy-earn%2Fsrc%2Fapp&appPaths=%2Fapi%2Fcontent%2Fsubmit%2Froute&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=&flyingShuttle=false&preferredRegion=&middlewareConfig=e30%3D!private-next-app-dir/api/content/submit/route.ts?__next_edge_ssr_entry__\";\nconst nextConfig = {\"env\":{},\"eslint\":{\"ignoreDuringBuilds\":true},\"typescript\":{\"ignoreBuildErrors\":true,\"tsconfigPath\":\"tsconfig.json\"},\"distDir\":\".next\",\"cleanDistDir\":true,\"assetPrefix\":\"\",\"cacheMaxMemorySize\":52428800,\"configOrigin\":\"next.config.ts\",\"useFileSystemPublicRoutes\":true,\"generateEtags\":true,\"pageExtensions\":[\"tsx\",\"ts\",\"jsx\",\"js\"],\"poweredByHeader\":true,\"compress\":true,\"images\":{\"deviceSizes\":[640,750,828,1080,1200,1920,2048,3840],\"imageSizes\":[16,32,48,64,96,128,256,384],\"path\":\"/_next/image\",\"loader\":\"default\",\"loaderFile\":\"\",\"domains\":[\"z-cdn-media.chatglm.cn\",\"chatglm.cn\"],\"disableStaticImages\":false,\"minimumCacheTTL\":60,\"formats\":[\"image/webp\"],\"dangerouslyAllowSVG\":false,\"contentSecurityPolicy\":\"script-src 'none'; frame-src 'none'; sandbox;\",\"contentDispositionType\":\"attachment\",\"remotePatterns\":[],\"unoptimized\":true},\"devIndicators\":{\"appIsrStatus\":true,\"buildActivity\":true,\"buildActivityPosition\":\"bottom-right\"},\"onDemandEntries\":{\"maxInactiveAge\":60000,\"pagesBufferLength\":5},\"amp\":{\"canonicalBase\":\"\"},\"basePath\":\"\",\"sassOptions\":{},\"trailingSlash\":false,\"i18n\":null,\"productionBrowserSourceMaps\":false,\"excludeDefaultMomentLocales\":true,\"serverRuntimeConfig\":{},\"publicRuntimeConfig\":{},\"reactProductionProfiling\":false,\"reactStrictMode\":false,\"reactMaxHeadersLength\":6000,\"httpAgentOptions\":{\"keepAlive\":true},\"logging\":{},\"expireTime\":31536000,\"staticPageGenerationTimeout\":60,\"modularizeImports\":{\"@mui/icons-material\":{\"transform\":\"@mui/icons-material/{{member}}\"},\"lodash\":{\"transform\":\"lodash/{{member}}\"}},\"outputFileTracingRoot\":\"/workspaces/moboy-earn\",\"experimental\":{\"cacheLife\":{\"default\":{\"stale\":300,\"revalidate\":900,\"expire\":4294967294},\"seconds\":{\"stale\":0,\"revalidate\":1,\"expire\":60},\"minutes\":{\"stale\":300,\"revalidate\":60,\"expire\":3600},\"hours\":{\"stale\":300,\"revalidate\":3600,\"expire\":86400},\"days\":{\"stale\":300,\"revalidate\":86400,\"expire\":604800},\"weeks\":{\"stale\":300,\"revalidate\":604800,\"expire\":2592000},\"max\":{\"stale\":300,\"revalidate\":2592000,\"expire\":4294967294}},\"cacheHandlers\":{},\"multiZoneDraftMode\":false,\"appNavFailHandling\":false,\"prerenderEarlyExit\":true,\"serverMinification\":true,\"serverSourceMaps\":false,\"linkNoTouchStart\":false,\"caseSensitiveRoutes\":false,\"preloadEntriesOnStart\":true,\"clientRouterFilter\":true,\"clientRouterFilterRedirects\":false,\"fetchCacheKeyPrefix\":\"\",\"middlewarePrefetch\":\"flexible\",\"optimisticClientCache\":true,\"manualClientBasePath\":false,\"cpus\":1,\"memoryBasedWorkersCount\":false,\"imgOptConcurrency\":null,\"imgOptTimeoutInSeconds\":7,\"imgOptMaxInputPixels\":268402689,\"imgOptSequentialRead\":null,\"isrFlushToDisk\":true,\"workerThreads\":false,\"optimizeCss\":false,\"nextScriptWorkers\":false,\"scrollRestoration\":false,\"externalDir\":false,\"disableOptimizedLoading\":false,\"gzipSize\":true,\"craCompat\":false,\"esmExternals\":true,\"fullySpecified\":false,\"swcTraceProfiling\":false,\"forceSwcTransforms\":false,\"largePageDataBytes\":128000,\"turbo\":{\"root\":\"/workspaces/moboy-earn\"},\"typedRoutes\":false,\"typedEnv\":false,\"parallelServerCompiles\":false,\"parallelServerBuildTraces\":false,\"ppr\":false,\"reactOwnerStack\":false,\"webpackMemoryOptimizations\":false,\"optimizeServerReact\":true,\"useEarlyImport\":false,\"staleTimes\":{\"dynamic\":0,\"static\":300},\"after\":false,\"serverComponentsHmrCache\":true,\"staticGenerationMaxConcurrency\":8,\"staticGenerationMinPagesPerWorker\":25,\"dynamicIO\":false,\"optimizePackageImports\":[\"lucide-react\",\"date-fns\",\"lodash-es\",\"ramda\",\"antd\",\"react-bootstrap\",\"ahooks\",\"@ant-design/icons\",\"@headlessui/react\",\"@headlessui-float/react\",\"@heroicons/react/20/solid\",\"@heroicons/react/24/solid\",\"@heroicons/react/24/outline\",\"@visx/visx\",\"@tremor/react\",\"rxjs\",\"@mui/material\",\"@mui/icons-material\",\"recharts\",\"react-use\",\"effect\",\"@effect/schema\",\"@effect/platform\",\"@effect/platform-node\",\"@effect/platform-browser\",\"@effect/platform-bun\",\"@effect/sql\",\"@effect/sql-mssql\",\"@effect/sql-mysql2\",\"@effect/sql-pg\",\"@effect/sql-squlite-node\",\"@effect/sql-squlite-bun\",\"@effect/sql-squlite-wasm\",\"@effect/sql-squlite-react-native\",\"@effect/rpc\",\"@effect/rpc-http\",\"@effect/typeclass\",\"@effect/experimental\",\"@effect/opentelemetry\",\"@material-ui/core\",\"@material-ui/icons\",\"@tabler/icons-react\",\"mui-core\",\"react-icons/ai\",\"react-icons/bi\",\"react-icons/bs\",\"react-icons/cg\",\"react-icons/ci\",\"react-icons/di\",\"react-icons/fa\",\"react-icons/fa6\",\"react-icons/fc\",\"react-icons/fi\",\"react-icons/gi\",\"react-icons/go\",\"react-icons/gr\",\"react-icons/hi\",\"react-icons/hi2\",\"react-icons/im\",\"react-icons/io\",\"react-icons/io5\",\"react-icons/lia\",\"react-icons/lib\",\"react-icons/lu\",\"react-icons/md\",\"react-icons/pi\",\"react-icons/ri\",\"react-icons/rx\",\"react-icons/si\",\"react-icons/sl\",\"react-icons/tb\",\"react-icons/tfi\",\"react-icons/ti\",\"react-icons/vsc\",\"react-icons/wi\"]},\"bundlePagesRouterDependencies\":false,\"configFile\":\"/workspaces/moboy-earn/next.config.ts\",\"configFileName\":\"next.config.ts\"}\nconst maybeJSONParse = (str)=>str ? JSON.parse(str) : undefined;\nconst rscManifest = (_self___RSC_MANIFEST = self.__RSC_MANIFEST) == null ? void 0 : _self___RSC_MANIFEST[\"/api/content/submit/route\"];\nconst rscServerManifest = maybeJSONParse(self.__RSC_SERVER_MANIFEST);\nif (rscManifest && rscServerManifest) {\n    setReferenceManifestsSingleton({\n        page: \"/api/content/submit/route\",\n        clientReferenceManifest: rscManifest,\n        serverActionsManifest: rscServerManifest,\n        serverModuleMap: createServerModuleMap({\n            serverActionsManifest: rscServerManifest\n        })\n    });\n}\nexport const ComponentMod = module;\nexport default EdgeRouteModuleWrapper.wrap(module.routeModule, {\n    nextConfig\n});\n\n//# sourceMappingURL=edge-app-route.js.map","import { PrismaClient } from '@prisma/client'\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: PrismaClient | undefined\n}\n\nexport const db =\n  globalForPrisma.prisma ??\n  new PrismaClient({\n    log: ['query'],\n  })\n\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = db"],"names":["runtime","twitter","instagram","youtube","tiktok","facebook","analyzeContentWithAI","url","zai","ZAI","create","functions","invoke","query","num","estimatedViews","Math","floor","random","quality","error","console","POST","request","walletAddress","json","NextResponse","status","validation","validateSocialMediaUrl","platform","pattern","Object","entries","SOCIAL_MEDIA_PATTERNS","test","valid","getPlatformFromUrl","includes","existingSubmission","db","contentSubmission","findUnique","where","user","data","submission","views","reward","userId","id","viewMetric","contentId","update","totalPosts","success","submittedAt","estimatedReward","initialReward","baseReward","globalThis","prisma","PrismaClient","log"],"sourceRoot":"","ignoreList":[]}